reticulate::repl_python()
import pandas as pd
import logging
from typing import List, Dict
class props:
class Translatable:
def __init__(self, text_dict):
self.text_dict = text_dict
class PropsUIPromptConsentFormTable:
def __init__(self, identifier, title, data, visualizations=None):
self.identifier = identifier
self.title = title
self.data = data
self.visualizations = visualizations if visualizations else []
def extract_tiktok_data(tiktok_file: str) -> Dict[str, List[Dict[str, str]]]:
# Mock data extraction
return {
'hashtags': [{'date': '2024-07-01', 'action': 'hashtag', 'content': '#fun'}],
'login_history': [{'date': '2024-07-01', 'action': 'login', 'content': 'Login from app'}],
'video_history': [{'date': '2024-07-01', 'action': 'watch', 'content': 'Video A'}],
'share_history': [{'date': '2024-07-01', 'action': 'share', 'content': 'Shared Video A'}],
'like_history': [{'date': '2024-07-01', 'action': 'like', 'content': 'Liked Video A'}],
'search_history': [{'date': '2024-07-01', 'action': 'search', 'content': 'Funny videos'}],
'ad_info': [{'date': '2024-07-01', 'action': 'ad', 'content': 'Ad for product B'}],
'comments': [{'date': '2024-07-01', 'action': 'comment', 'content': 'Nice video!'}],
}
def parse_hashtags(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('hashtags', [])
def parse_login_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('login_history', [])
def parse_video_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('video_history', [])
def parse_share_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('share_history', [])
def parse_like_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('like_history', [])
def parse_search_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('search_history', [])
def parse_ad_info(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('ad_info', [])
def parse_comments(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('comments', [])
def parse_data(all_data: List[Dict[str, str]]) -> pd.DataFrame:
return pd.DataFrame(all_data)
def vis_create_chart(*args, **kwargs):
import pandas as pd
import logging
from typing import List, Dict
class props:
class Translatable:
def __init__(self, text_dict):
self.text_dict = text_dict
class PropsUIPromptConsentFormTable:
def __init__(self, identifier, title, data, visualizations=None):
self.identifier = identifier
self.title = title
self.data = data
self.visualizations = visualizations if visualizations else []
def extract_tiktok_data(tiktok_file: str) -> Dict[str, List[Dict[str, str]]]:
# Mock data extraction
return {
'hashtags': [{'date': '2024-07-01', 'action': 'hashtag', 'content': '#fun'}],
'login_history': [{'date': '2024-07-01', 'action': 'login', 'content': 'Login from app'}],
'video_history': [{'date': '2024-07-01', 'action': 'watch', 'content': 'Video A'}],
'share_history': [{'date': '2024-07-01', 'action': 'share', 'content': 'Shared Video A'}],
'like_history': [{'date': '2024-07-01', 'action': 'like', 'content': 'Liked Video A'}],
'search_history': [{'date': '2024-07-01', 'action': 'search', 'content': 'Funny videos'}],
'ad_info': [{'date': '2024-07-01', 'action': 'ad', 'content': 'Ad for product B'}],
'comments': [{'date': '2024-07-01', 'action': 'comment', 'content': 'Nice video!'}],
}
def parse_hashtags(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('hashtags', [])
def parse_login_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('login_history', [])
def parse_video_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('video_history', [])
def parse_share_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('share_history', [])
def parse_like_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('like_history', [])
def parse_search_history(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('search_history', [])
def parse_ad_info(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('ad_info', [])
def parse_comments(data: Dict[str, List[Dict[str, str]]]) -> List[Dict[str, str]]:
return data.get('comments', [])
def parse_data(all_data: List[Dict[str, str]]) -> pd.DataFrame:
return pd.DataFrame(all_data)
def vis_create_chart(*args, **kwargs):
return "Visualization"
props.vis = type("vis", (), {"create_chart": vis_create_chart})
# Example usage
mock_file = "mock_tiktok_data.json"
results = process_tiktok_data(mock_file)
# Output the results
for table in results:
print(f"Table ID: {table.identifier}")
print(f"Table Title: {table.title.text_dict['en']}")
print("Data:")
print(table.data)
print("Visualizations:")
print(table.visualizations)
